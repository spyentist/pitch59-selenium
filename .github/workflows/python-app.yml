# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ test-without-failures ]
  pull_request:
    branches: [ test-without-failures ]

jobs:
  build:

    runs-on: ubuntu-latest
# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: selenium/standalone-chrome:4.0.0-beta-3-20210426
# image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python3 -V  
  # Print out python version for debugging
  - sudo apt update
  - sudo apt-get -y install python3-pip
  - pip install selenium
  - /opt/bin/entry_point.sh &
  - sleep 5
  # - install pip
  # - pip install selenium
  # - pip install virtualenv
  # - virtualenv venv
  # - source venv/bin/activate

test:
  script:
    - python3 p59-search.py -h test
    - python3 p59-sign-in.py -h test
    - python3 p59-setting.py -h test
    - python3 p59-reset-pwd.py -h test
    - python3 p59-favorite.py -h test
